Problem link - https://leetcode.com/problems/snakes-and-ladders/description/?envType=daily-question&envId=2025-05-31

Using BFS with values [1,6]

class Solution {
    public int snakesAndLadders(int[][] board) {
        Queue<Integer> q = new LinkedList<>();
        int ans = 0;
        int n = board.length;
        int vis[][] = new int[n][n];
        for(int ar[]:vis)
        Arrays.fill(ar,-1);
        q.add(1);
        vis[n-1][0] = 1;
        while(!q.isEmpty())
        {
            int sz = q.size();
            while(sz-- !=0){
                int x = q.poll();
                if(x==(n*n))
                return ans;
                for(int i = 1;i<=6;i++)
                {
                    int v = x+i;
                    if(v > (n*n))
                    break;
                    int cord[] = cordinate(x+i,n);
                    int r = cord[0];
                    int c = cord[1];
                    if(vis[r][c]!=-1)
                    continue;
                    vis[r][c] = 1;
                    if(board[r][c]==-1)
                    q.add(v);
                    else
                    q.add(board[r][c]);
                }
            }
            ans++;
        }
        return -1;
    }
    public int[] cordinate(int x,int n)
    {
        int r = (n-1)-((x-1)/n);
        int c = (x-1)%n;
        if((n%2==0 && r%2==0) || (n%2!=0 && r%2!=0))
            c = (n-1) - c;
        return new int[]{r,c};
    }
}
